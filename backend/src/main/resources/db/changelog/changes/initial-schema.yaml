databaseChangeLog:
  - changeSet:
      id: 001-create-events-table
      author: SA
      changes:
        - createTable:
            tableName: events
            columns:
              - column:
                  name: id
                  type: bigint
                  constraints:
                    primaryKey: true
                    nullable: false
              - column:
                  name: name
                  type: varchar(100)
                  constraints:
                    nullable: false
              - column:
                  name: date_time
                  type: timestamptz
                  constraints:
                    nullable: false
              - column:
                  name: location
                  type: varchar(200)
              - column:
                  name: status
                  type: varchar(20)
                  defaultValue: "ACTIVE"
                  constraints:
                    nullable: false
              - column:
                  name: additional_info
                  type: varchar(1500)
              - column:
                  name: total_participants
                  type: int
                  defaultValue: '0'
                  constraints:
                    nullable: false
              - column:
                  name: created_at
                  type: timestamptz
                  defaultValueComputed: "CURRENT_TIMESTAMP"
                  constraints:
                    nullable: false
              - column:
                  name: updated_at
                  type: timestamptz
                  defaultValueComputed: "CURRENT_TIMESTAMP"
                  constraints:
                    nullable: false

        - addAutoIncrement:
            tableName: events
            columnName: id
            columnDataType: bigint
            incrementBy: 1
            startWith: 99

  - changeSet:
      id: 002-create-participants-table
      author: SA
      changes:
        - createSequence:
            sequenceName: participants_id_seq
            startValue: 99
            incrementBy: 1
        - createTable:
            tableName: participants
            columns:
              - column:
                  name: id
                  type: bigint
                  defaultValueComputed: nextval('participants_id_seq')
                  constraints:
                    primaryKey: true
                    nullable: false
              - column:
                  name: participant_type
                  type: varchar(31)
                  constraints:
                    nullable: false
              - column:
                  name: payment_method
                  type: varchar(20)
              - column:
                  name: additional_info
                  type: varchar(1500)
              - column:
                  name: created_at
                  type: timestamptz
                  defaultValueComputed: "CURRENT_TIMESTAMP"
                  constraints:
                    nullable: false
              - column:
                  name: updated_at
                  type: timestamptz
                  defaultValueComputed: "CURRENT_TIMESTAMP"
                  constraints:
                    nullable: false

  - changeSet:
      id: 003-create-persons-table
      author: SA
      changes:
        - createTable:
            tableName: persons
            columns:
              - column:
                  name: id
                  type: bigint
                  constraints:
                    primaryKey: true
                    nullable: false
                    foreignKeyName: fk_person_participant
                    references: participants(id)
                    deleteCascade: true
              - column:
                  name: first_name
                  type: varchar(50)
                  constraints:
                    nullable: false
              - column:
                  name: last_name
                  type: varchar(50)
                  constraints:
                    nullable: false
              - column:
                  name: personal_code
                  type: varchar(11)
                  constraints:
                    nullable: false
                    unique: true
              - column:
                  name: email
                  type: varchar(100)
              - column:
                  name: phone
                  type: varchar(20)

  - changeSet:
      id: 004-create-companies-table
      author: SA
      changes:
        - createTable:
            tableName: companies
            columns:
              - column:
                  name: id
                  type: bigint
                  constraints:
                    primaryKey: true
                    nullable: false
                    foreignKeyName: fk_company_participant
                    references: participants(id)
                    deleteCascade: true
              - column:
                  name: company_name
                  type: varchar(100)
                  constraints:
                    nullable: false
              - column:
                  name: registration_code
                  type: varchar(8)
                  constraints:
                    nullable: false
                    unique: true
              - column:
                  name: participant_count
                  type: int
              - column:
                  name: contact_person
                  type: varchar(100)
              - column:
                  name: email
                  type: varchar(100)
              - column:
                  name: phone
                  type: varchar(20)

  - changeSet:
      id: 005-create-event-participant-table
      author: SA
      changes:
        - createTable:
            tableName: event_participant
            columns:
              - column:
                  name: event_id
                  type: bigint
                  constraints:
                    nullable: false
              - column:
                  name: participant_id
                  type: bigint
                  constraints:
                    nullable: false
              - column:
                  name: attendance_status
                  type: varchar(20)
                  defaultValue: "REGISTERED"
              - column:
                  name: registered_at
                  type: timestamptz
                  defaultValueComputed: "CURRENT_TIMESTAMP"
                  constraints:
                    nullable: false
        - addPrimaryKey:
            tableName: event_participant
            columnNames: event_id, participant_id
            constraintName: pk_event_participant
        - addForeignKeyConstraint:
            baseTableName: event_participant
            baseColumnNames: event_id
            referencedTableName: events
            referencedColumnNames: id
            constraintName: fk_event_participant_event
            onDelete: CASCADE
        - addForeignKeyConstraint:
            baseTableName: event_participant
            baseColumnNames: participant_id
            referencedTableName: participants
            referencedColumnNames: id
            constraintName: fk_event_participant_participant
            onDelete: CASCADE

  - changeSet:
      id: 006-create-indexes
      author: SA
      changes:
        - createIndex:
            indexName: idx_events_date_time
            tableName: events
            columns:
              - column:
                  name: date_time
        - createIndex:
            indexName: idx_persons_personal_code
            tableName: persons
            columns:
              - column:
                  name: personal_code
        - createIndex:
            indexName: idx_companies_registration_code
            tableName: companies
            columns:
              - column:
                  name: registration_code

  - changeSet:
      id: 007-1-create-update-event-participants-fn
      author: SA
      changes:
        - sql:
            comment: Create function to update total_participants when event_participant is modified
            sql: |
              CREATE OR REPLACE FUNCTION update_event_participants()
              RETURNS TRIGGER 
              LANGUAGE plpgsql
              AS $$
              BEGIN
                  UPDATE events e
                  SET total_participants = (
                      SELECT COALESCE(SUM(
                          CASE
                              WHEN p.participant_type = 'PERSON' THEN 1
                              WHEN p.participant_type = 'COMPANY' THEN COALESCE(c.participant_count, 0)
                              ELSE 0
                          END
                      ), 0)
                      FROM event_participant ep
                      JOIN participants p ON ep.participant_id = p.id
                      LEFT JOIN companies c ON p.id = c.id AND p.participant_type = 'COMPANY'
                      WHERE ep.event_id = e.id
                  );
                  RETURN NULL;
              END;
              $$
            stripComments: false
            splitStatements: false

  - changeSet:
      id: 007-2-create-event-participant-trigger
      author: SA
      changes:
        - sql:
            comment: Create trigger on event_participant table to update total_participants
            sql: |
              CREATE TRIGGER event_participant_trigger
              AFTER INSERT OR UPDATE OR DELETE
              ON event_participant
              FOR EACH ROW
              EXECUTE FUNCTION update_event_participants();
            stripComments: false
            splitStatements: true

  - changeSet:
      id: 007-3-create-update-on-company-change-fn
      author: SA
      changes:
        - sql:
            comment: Create function to update total_participants when participant_count in companies changes
            sql: |
              CREATE OR REPLACE FUNCTION update_event_participants_on_company_change()
              RETURNS TRIGGER 
              LANGUAGE plpgsql
              AS $$
              BEGIN
                  UPDATE events e
                  SET total_participants = (
                      SELECT COALESCE(SUM(
                          CASE
                              WHEN p.participant_type = 'PERSON' THEN 1
                              WHEN p.participant_type = 'COMPANY' THEN COALESCE(c.participant_count, 0)
                              ELSE 0
                          END
                      ), 0)
                      FROM event_participant ep
                      JOIN participants p ON ep.participant_id = p.id
                      LEFT JOIN companies c ON p.id = c.id AND p.participant_type = 'COMPANY'
                      WHERE ep.event_id = e.id
                  )
                  WHERE e.id IN (
                      SELECT ep.event_id
                      FROM event_participant ep
                      WHERE ep.participant_id = NEW.id
                  );
                  RETURN NULL;
              END;
              $$
            stripComments: false
            splitStatements: false

  - changeSet:
      id: 007-4-create-company-participant-count-trigger
      author: SA
      changes:
        - sql:
            comment: Create trigger on companies table to update total_participants on participant_count change
            sql: |
              CREATE TRIGGER company_participant_count_trigger
              AFTER UPDATE OF participant_count
              ON companies
              FOR EACH ROW
              EXECUTE FUNCTION update_event_participants_on_company_change();
            stripComments: false
            splitStatements: true

  - changeSet:
      id: 008-initialize-total-participants
      author: SA
      changes:
        - sql:
            comment: Initialize total_participants for existing events
            sql: |
              UPDATE events e
              SET total_participants = (
                  SELECT COALESCE(SUM(
                      CASE
                          WHEN p.participant_type = 'PERSON' THEN 1
                          WHEN p.participant_type = 'COMPANY' THEN COALESCE(c.participant_count, 0)
                      END
                  ), 0)
                  FROM event_participant ep
                  JOIN participants p ON ep.participant_id = p.id
                  LEFT JOIN companies c ON p.id = c.id AND p.participant_type = 'COMPANY'
                  WHERE ep.event_id = e.id
              );
            stripComments: false
              
  - changeSet:
      id: 009-add-constraints
      author: SA
      changes:
        - sql:
            sql: |
              ALTER TABLE participants
              ADD CONSTRAINT check_participant_type
              CHECK (participant_type IN ('PERSON', 'COMPANY'));

              ALTER TABLE companies
              ADD CONSTRAINT check_participant_count
              CHECK (participant_count > 0);
              
              
